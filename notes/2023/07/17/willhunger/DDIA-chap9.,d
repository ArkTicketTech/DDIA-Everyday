#### Relying on Linearizability
使用线性化的几种场景：
##### Locking and leader election
主从复制的系统需要确保有且只有一个主节点， 否则会产生脑裂。选举新的主节点常  
见的方法是使用锁，只有拿到锁的节点才能成为主节点。

分布式协调协调服务，例如 ZooKeeper 和 etcd 等常用来实现分布式锁和主节点选举，其使用了支持容错的共识算法确保可线性化。

分布式数据库如 Oracle Real Application Cluster 的分布式锁的粒度更细，RAC为每个磁盘页面均设置一 把锁，多个节点因此可以并发地共享访问存储系统。 这些可线性化的锁处于事务执行的关键路径上， 出于性能考虑，RAC部署时通常都要求专用的集群互连网络来连接数据库节点。


##### Constraints and uniqueness guarantees
硬性的唯一性约束， 常见如关系型数据库中主键的约束， 则需要线性化保证。例如：相同的写入路径和文件名，注册用户时的唯一用户名要求等。

其他如外键或属性约束， 则并不要求一定线性化。
